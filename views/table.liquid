{% extends "userview" %}

{% block userview %}

	<div class="tabl">
		<div id="plav">
			<div class="tabl_head" id="tabl_head_1">
				<table style="background:{{ Model.ColorTableBd }} ; border-bottom:1px solid {{ Model.ColorTableBd }};">
					<thead>
						<tr>
							<th class="empty_th" nowrap></th>
							<th class="empty_th" nowrap></th>
							{% for title in Model.Titles %}
								<th class="tabl_heading" style=
								  "
									min-width:{{ title.Width }} ; 
									max-width:{{ title.Width }} ;
								  "
								  nowrap
								>{{ title.Name }}</th>
							{% endfor %}
						</tr>
					</thead>
				</table>
			</div>
		</div>
		<div class="tabl_body" id="tabl_body_1">
			{% for line in Model.Entries %}
				<div class="glav_tab">
					<table style="background:{{ Model.ColorTableBd }} ; border-bottom:1px solid {{ Model.ColorTableBd }};">
						<tbody>
							<tr style="background:{{ Model.ColorTableBg }}">
								<td style="min-width:14px ; max-width:14px ;">
									<input class="custom_checkbox" type="checkbox" />
								</td>
								<td class='open_form'>
									<a href='{{ line[1].Url }}' style="cursor:pointer"><img src="{{ "~/assets/openform.png" | url }}" style="width:100%;"></a>
								</td>
							   {% for cell in line %}
									 <td class="editable" id_entry="{{cell.Id}}" data-type="text"   style="cursor:pointer ; width:{{ cell.Width }} ; min-width:{{ cell.Width }} ; max-width:{{ cell.Width }} ; height:{{ cell.Height }} ; min-height:{{ cell.Height }} ; max-height:{{ cell.Height }}"><div style="height:{{ cell.Height }} ; min-height:{{ cell.Height }} ; max-height:{{ cell.Height }} ; overflow:hidden "><div style="height:100% ; column-width: {{ cell.Width }}">{{ cell.Value }}</div></div></td>
							   {% endfor %}
							</tr>
						</tbody>
					</table>
				</div>
			{% endfor %}
		</div>
	</div>

	<script type="text/javascript">
		if(/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)){} 
		else{ document.getElementsByTagName('body')[0].style.overflow='hidden'; }
			document.getElementById("tabl_body_1").onscroll = function() {
				document.getElementById('tabl_head_1').scrollLeft = document.getElementById('tabl_body_1').scrollLeft;
			};
    </script>

	<script src="../scripts/MenuOnMobile.js"></script>

	<script type="text/javascript">
	if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {

		document.addEventListener("DOMContentLoaded", function () {
			var elements = document.getElementsByClassName('glav_tab')
			var scroll = elements[0].scrollLeft;

			function ABC() {
				for (k = 0; k < elements.length; k++) {
					if (elements[k].scrollLeft != scroll) {
						scroll = elements[k].scrollLeft;
						break;
					}
				}

				if (scroll == 0) {
					document.getElementById("tabl_body_1").onscroll = function () {
						document.getElementById('tabl_head_1').scrollLeft = document.getElementById('tabl_body_1').scrollLeft;
					};
				}
				else {
					document.getElementById('tabl_head_1').scrollLeft = scroll;
					for (i = 0; i < elements.length; i++) {
						elements[i].scrollLeft = scroll;
					}
				}
				setTimeout(ABC, 5);
			}
		ABC();
		});
	};
	</script>

	<script type="text/javascript">
		document.addEventListener("DOMContentLoaded", function(){


			function redact(){
				document.addEventListener('mouseup', clickpast);
				function clickpast (event) {
					var container = document.getElementById("selected");
					
					if (event.target.parentNode.parentNode !=container){
						container.style.border="";
						container.style.maxWidth=parseInt(container.style.maxWidth,10)+ 2 +"px";
						container.style.minWidth=parseInt(container.style.minWidth,10)+ 2 +"px";
						container.firstElementChild.style.minHeight=parseInt(container.firstElementChild.style.minHeight,10)+ 2 +"px";
						container.firstElementChild.style.maxHeight=parseInt(container.firstElementChild.style.maxHeight,10)+ 2 +"px";
						container.firstElementChild.style.height=parseInt(container.firstElementChild.style.height,10)+ 2 +"px";
						container.style.height=parseInt(container.style.height,10)+ 2 +"px";
						container.onclick = onRowClickFirst;
						container.setAttribute('id','');
					}
				}
	  
				function clicktd(){
					var elements = document.getElementsByClassName('editable');
		  
					for (var i = 0; i < elements.length; i++) {
						var row = elements[i];
						row.onclick = onRowClickFirst;
					}
				}
			
				function onRowClickFirst(event) {
					var target = event ? event.target : window.event.srcElement;
					
					this.onclick=null;
					this.style.border="1px solid blue";
					this.style.maxWidth=parseInt(this.style.maxWidth,10)- 2 +"px";
					this.style.minWidth=parseInt(this.style.minWidth,10)- 2 +"px";
					this.firstElementChild.style.minHeight=parseInt(this.firstElementChild.style.minHeight,10)- 2 +"px";
					this.firstElementChild.style.maxHeight=parseInt(this.firstElementChild.style.maxHeight,10)- 2 +"px";
					this.firstElementChild.style.height=parseInt(this.firstElementChild.style.height,10)- 2 +"px";
					this.style.height=parseInt(this.style.height,10)- 2 +"px";
					this.onclick=onRowClickSecond;
					this.setAttribute('id','selected');
				}

				function onRowClickSecond(event) {
					var target = event ? event.target : window.event.srcElement;
					var cell = this.firstElementChild;
					var input = document.createElement('textarea');
					
					this.onclick=null;
					this.className = 'editable';
					// IE fails to change "type" property to unsupported value
					input.setAttribute('type', cell.getAttribute('data-type') || 'text');
					input.value = cell.firstElementChild.firstChild.data;
					input.onblur=unfocus; 
					input.style.border='0px';
					input.style.borderRadius='0';
					input.style.outline='0';
					input.style.fontSize='16px';
					
					if(/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) input.style.pointerEvents='none'; 
					
					cell.insertBefore(input, cell.firstChild);
					input.style.height='90%';
					input.style.width='100%';
					input.style.paddingLeft='0px';
					input.style.marginLeft='0px';
					input.focus();
					
					input.onkeyup=function(event){
						if(event.keyCode == 13|| event.charCode === 13){
							input.value = input.value.substring(0, input.value.length - 1);
							input.blur();
						}
					};
				}

				function unfocus(event) {
					this.nextElementSibling.firstChild.data = this.value;
					this.parentNode.parentNode.style.border="";
					this.parentNode.parentNode.style.maxWidth=parseInt(this.parentNode.parentNode.style.maxWidth,10)+ 2 +"px";
					this.parentNode.parentNode.style.minWidth=parseInt(this.parentNode.parentNode.style.minWidth,10)+ 2 +"px";
					this.parentNode.parentNode.onclick=onRowClickFirst;
					
					var number_td=0;
					var td=this.parentNode.parentNode;
					
					while (td.previousElementSibling)
					{
						number_td++;
						td=td.previousElementSibling;
					}
					
					var field=document.getElementById('tabl_head_1').firstElementChild.firstElementChild.firstElementChild.children[number_td];
					
					this.parentNode.parentNode.setAttribute('id','');
					
					var url_of_change;
					
					<!--url_of_change="/uv/xx/recId="+this.parentNode.parentNode.getAttribute('id_entry')+"&"+field.innerHTML+"="+this.value;-->
					<!--url_of_change="/uv/44?recId="+this.parentNode.parentNode.getAttribute('id_entry')+"&"+field.innerHTML+"="+this.value;-->
					<!-- correct url for example: field name on english from base (entity: records)-->
					url_of_change= window.location.pathname +"?recId="+this.parentNode.parentNode.getAttribute('id_entry')+"&"+"Text"+"="+this.value;
					
					var current_url=window.location.protocol + "//" + window.location.host  + window.location.pathname;
					
					var a = document.createElement('a');
					a.href = url_of_change;
					
					var form = document.createElement('form');
					
					form.appendChild(a);
					form.method = "POST";
					document.body.appendChild(form);
					form.submit();
					document.body.removeChild(form);
					this.parentNode.removeChild(this);
					window.location.href = current_url
				};
			clicktd();
			}
		redact();
		});
	</script>

	<script>
		var setShiftDown = function(event){
			if(event.keyCode === 16 || event.charCode === 16){
				window.shiftDown = true;
			}
		};

		var setShiftUp = function(event){
			if(event.keyCode === 16 || event.charCode === 16){
				window.shiftDown = false;
			}
		};

		window.addEventListener? document.addEventListener('keydown', setShiftDown) : document.attachEvent('keydown', setShiftDown);
		window.addEventListener? document.addEventListener('keyup', setShiftUp) : document.attachEvent('keyup', setShiftUp);

		document.addEventListener("DOMContentLoaded", function(){
			var elements = document.getElementsByClassName('custom_checkbox');
			var lastcheck=0;
		
			for (var i = 0; i < elements.length; i++) {
				var check_box = elements[i];
				check_box.onchange = oncheck;
				check_box.setAttribute('index', i);
			}
			function oncheck(event){
				var target = event ? event.target : window.event.srcElement;
					var i=lastcheck;
					lastcheck=Number(target.getAttribute('index'));
			
					if(window.shiftDown){
						while(elements[i]!=target){
							elements[i].checked=target.checked;
								if(lastcheck>i)
								i++;
								else
								i--;
						}
					}

			}
		
			function checkedd(){
				for (var i = 0; i < elements.length; i++) {
					var check = elements[i];
					if(check.checked) {check.parentNode.parentNode.style.backgroundColor='{{ Model.ColorTableSelect }}';}
					else{check.parentNode.parentNode.style.backgroundColor='{{ Model.ColorTableBg }}';}
				}
		
				window.addEventListener? document.addEventListener('keydown', setShiftDown) : document.attachEvent('keydown', setShiftDown);
				window.addEventListener? document.addEventListener('keyup', setShiftUp) : document.attachEvent('keyup', setShiftUp);
			setTimeout(checkedd, 5);
			}
		checkedd();
		});
	</script>
{% endblock %}